{"expireTime":9007200824360202000,"key":"gatsby-plugin-mdx-entire-payload-943b634100d21fd50e412ea912be37bf-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/alejandromesasuarez/Winterfell/react-hooks-lab/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":137,"offset":138},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":140},"end":{"line":5,"column":29,"offset":168},"indent":[]}},{"type":"import","value":"import { Playground } from \"docz\";\nimport IntersectionObserver from \"./use-intersection-observer\";","position":{"start":{"line":8,"column":1,"offset":171},"end":{"line":9,"column":64,"offset":269},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"use-intersection-observer","position":{"start":{"line":11,"column":3,"offset":273},"end":{"line":11,"column":28,"offset":298},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":271},"end":{"line":11,"column":28,"offset":298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hook Description","position":{"start":{"line":13,"column":1,"offset":300},"end":{"line":13,"column":17,"offset":316},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":300},"end":{"line":13,"column":17,"offset":316},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <IntersectionObserver />\n</Playground>","position":{"start":{"line":15,"column":1,"offset":318},"end":{"line":17,"column":14,"offset":371},"indent":[1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"import React, { useRef } from \"react\";\nimport { useIntersectionObserver } from \"react-hooks-lab\";\n\nconst IntersectionObserver = () => {\n  const containerRef = useRef(null);\n  const isIntersecting = useIntersectionObserver(containerRef, { rootMargin: \"-200px\" });\n\n  const containerRef2 = useRef(null);\n  const isIntersecting2 = useIntersectionObserver(containerRef, { rootMargin: \"-200px\", triggerOnce: false });\n\n  return (\n    <>\n      <div>White Space</div>\n\n      <span>Watching intersect using -200px of rootMargin</span>\n      <span>Triggering multiple times</span>\n      <div ref={containerRef2}>{isIntersecting2 ? \"Intersected\" : \"Not Yet\"}</div>\n\n      <span>Watching intersect using -200px of rootMargin</span>\n      <span>Triggering once</span>\n      <div ref={containerRef}>{isIntersecting ? \"Intersected\" : \"Not Yet\"}</div>\n    </>\n  );\n};\nexport default IntersectionObserver;","position":{"start":{"line":19,"column":1,"offset":373},"end":{"line":45,"column":4,"offset":1273},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":48,"column":1,"offset":1276},"end":{"line":48,"column":31,"offset":1306},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":48,"column":31,"offset":1306}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/alejandromesasuarez/Winterfell/react-hooks-lab/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from \"docz\";\nimport IntersectionObserver from \"./use-intersection-observer\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"use-intersection-observer\"\n    }}>{`use-intersection-observer`}</h1>\n    <p>{`Hook Description`}</p>\n    <Playground __position={0} __code={'<IntersectionObserver />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      IntersectionObserver\n    }} mdxType=\"Playground\">\n  <IntersectionObserver mdxType=\"IntersectionObserver\" />\n    </Playground>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React, { useRef } from \"react\";\nimport { useIntersectionObserver } from \"react-hooks-lab\";\n\nconst IntersectionObserver = () => {\n  const containerRef = useRef(null);\n  const isIntersecting = useIntersectionObserver(containerRef, { rootMargin: \"-200px\" });\n\n  const containerRef2 = useRef(null);\n  const isIntersecting2 = useIntersectionObserver(containerRef, { rootMargin: \"-200px\", triggerOnce: false });\n\n  return (\n    <>\n      <div>White Space</div>\n\n      <span>Watching intersect using -200px of rootMargin</span>\n      <span>Triggering multiple times</span>\n      <div ref={containerRef2}>{isIntersecting2 ? \"Intersected\" : \"Not Yet\"}</div>\n\n      <span>Watching intersect using -200px of rootMargin</span>\n      <span>Triggering once</span>\n      <div ref={containerRef}>{isIntersecting ? \"Intersected\" : \"Not Yet\"}</div>\n    </>\n  );\n};\nexport default IntersectionObserver;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}